digraph {
	"node0" [shape="rect",color="black",label=<confidentiality_lec5ex1_declassified(this)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ <BR/>[inferred: HL, state: _|_] ]]<BR/>}} -&gt; [call_ret_value@'imp-testcases/non-interference/interproc/program.imp':28:44]>];
	"node1" [shape="rect",color="gray",label=<confidentiality_lec6_declassified(this)<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ <BR/>[inferred: HL, state: _|_] ]]<BR/>}} -&gt; [call_ret_value@'imp-testcases/non-interference/interproc/program.imp':29:41]>];
	"node2" [shape="rect",color="black",peripheries="2",label=<ret<BR/>{{<BR/>heap [[ monolith ]]<BR/>value [[ <BR/>[inferred: _|_, state: _|_] ]]<BR/>}} -&gt; [skip]>];
	"node1" -> "node2" [color="black"];
	"node0" -> "node1" [color="black"];
subgraph cluster_legend {
	label="Legend";
	style=dotted;
	node [shape=plaintext];
	"legend" [label=<<table border="0" cellpadding="2" cellspacing="0" cellborder="0"><tr><td align="right">node border&nbsp;</td><td align="left"><font color="gray">gray</font>, single</td></tr><tr><td align="right">entrypoint border&nbsp;</td><td align="left"><font color="black">black</font>, single</td></tr><tr><td align="right">exitpoint border&nbsp;</td><td align="left"><font color="black">black</font>, double</td></tr><tr><td align="right">sequential edge&nbsp;</td><td align="left"><font color="black">black</font>, solid</td></tr><tr><td align="right">true edge&nbsp;</td><td align="left"><font color="blue">blue</font>, dashed</td></tr><tr><td align="right">false edge&nbsp;</td><td align="left"><font color="red">red</font>, dashed</td></tr></table>>];
}

}
